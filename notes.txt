## to do
pseudo-code:

~~set up input parameters~~  
~~set up output directories~~  
~~read metadata~~  
~~read images for nucleus, FISH, IF~~  
~~identify and filter for nucleus~~  
identify FISH spot within a given nucleus  
generate random spots in same nucleus    
~~measure IF intensity - support multiple IF channels~~  
output standard excel files  
output images of called FISH foci with IF channels  
output 2D contour graphs  
output 3D contour graphs  

## improvements
Better nuclear distinction. Like for touching nuclei.  
Maybe have separate function to quickly test different thresholds to see what works?  
Right now, we use the middle 50% of the z stacks as "valid nuclei". We could improve this, but would have to re-think
how we call nuclear pixels
@Improvement Could probably just choose x random spots and calculate mean/std from that. Maybe faster and more
    memory efficient  
       @Improvement  Write a function to filter nuclei based on ones that have FISH spots. Then maybe choose like 5-10 random spots.
    pick random x, y, and z integers to make a random box within image.
    choose low and high thresholds to make sure boxes don't go over edges of image

@Todo Handle cases where the FISH spot is near the edges of the image. This will probably throw errors currently.
@Todo handle cases where user puts the files in wrong (like if they forgot to put experiments in unique folders)
@Todo There is a bug in random generator where sometimes the average box length is longer than the artificial box
@Todo BUG when there are no FISH spots found. Need to handle these cases
@Todo Add output_parameters.txt json file to store the latest output parameters used

@TODO Need to figure out the mean_storage problem and how it goes to analyze_sample. Especially with multiple channels.
Maybe just need to do "protein" and "protein_b" if the multi flag is hit?